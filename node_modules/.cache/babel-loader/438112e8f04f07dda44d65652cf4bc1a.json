{"ast":null,"code":"var _jsxFileName = \"/Users/charlescorio/Desktop/sei/projects/p4/frontend/src/components/NewAlbum.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction NewAlbum() {\n  _s();\n\n  const url = 'http://localhost:8000/api/albums/';\n  const {\n    id\n  } = useParams();\n  console.log(id);\n  const [album, setAlbum] = useState({\n    name: '',\n    artist: Number(id)\n  });\n  const [image, newImage] = useState(null);\n  const navigate = useNavigate();\n  let token = localStorage.getItem('access_token');\n\n  const handleChange = event => {\n    if ([event.target.name] == 'image') {\n      newImage({\n        image_url: event.target.files\n      });\n      console.log(event.target.files);\n    } else {\n      setAlbum({ ...album,\n        [event.target.id]: event.target.value\n      });\n      console.log(album);\n    }\n  };\n\n  const [networkErrMsg, setNetworkErrMsg] = useState(null);\n\n  const statusCodeToErr = responseObj => {\n    setNetworkErrMsg(`Network Error of code: ${responseObj.status}`); // TODO - console log the err message\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append();\n    console.log(`fetching with token ${token}`);\n    setNetworkErrMsg(null);\n\n    for (const name in album) {\n      formData.append(name, album[name]);\n    }\n\n    formData.append(image.image_url, image.value);\n    console.log(formData);\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        'Authorization': ` JWT ${token}`\n      },\n      body: album\n    }).then(res => {\n      if (res.ok) {\n        // navigate(`/artist/${id}`)\n        return res.json();\n      } else {\n        statusCodeToErr(res);\n        return Promise.resolve(null);\n      }\n    }).then(data => {\n      if (!data) {\n        console.log(`problem with network request: ${networkErrMsg}`);\n      } else {\n        console.log(data); // call to refresh the list\n        // set RefreshCounter(refreshCounter + 1)\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: handleChange,\n        value: album.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 91\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        accept: \"image/*\",\n        id: \"image_url\",\n        onChange: handleChange,\n        name: \"image\",\n        type: \"file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-danger\",\n        value: \"goodbye\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(NewAlbum, \"/UP19xaso6hLz7CFB4lBCIokxB4=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = NewAlbum;\nexport default NewAlbum;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewAlbum\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","NewAlbum","url","id","console","log","album","setAlbum","name","artist","Number","image","newImage","navigate","token","localStorage","getItem","handleChange","event","target","image_url","files","value","networkErrMsg","setNetworkErrMsg","statusCodeToErr","responseObj","status","handleSubmit","e","preventDefault","formData","FormData","append","fetch","method","headers","body","then","res","ok","json","Promise","resolve","data"],"sources":["/Users/charlescorio/Desktop/sei/projects/p4/frontend/src/components/NewAlbum.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { useParams, useNavigate } from 'react-router-dom'\n\nfunction NewAlbum() {\n    const url = 'http://localhost:8000/api/albums/'\n    const {id}= useParams()\n    console.log(id)\n    const [album, setAlbum] = useState({\n        name: '',\n        artist: Number(id)\n        \n    })\n    const [image, newImage] = useState(null)\n    \n\n    \n\n    const navigate = useNavigate()\n    let token = localStorage.getItem('access_token')\n\n\n    const handleChange = (event) => {\n        if ([event.target.name] == 'image') {\n            newImage({image_url: event.target.files})\n            console.log(event.target.files)\n        } else {\n        setAlbum({ ...album, [event.target.id]: event.target.value })\n        console.log(album)}\n    }\n\n\n\n    const [networkErrMsg, setNetworkErrMsg] = useState(null)\n\n    const statusCodeToErr = (responseObj) => {\n        setNetworkErrMsg(`Network Error of code: ${responseObj.status}`)\n        // TODO - console log the err message\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        const formData = new FormData();\n        formData.append()\n        console.log(`fetching with token ${token}`)\n        setNetworkErrMsg(null)\n        for (const name in album) {\n            formData.append(name, album[name]);\n        }\n        formData.append(image.image_url, image.value)\n        console.log(formData)\n        fetch(url, \n            {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                    'Authorization': ` JWT ${token}`,\n                \n                },\n                body: album\n            }\n        )\n            .then(res => {\n                if (res.ok) {\n                    // navigate(`/artist/${id}`)\n                    return res.json()\n                    \n                } else {\n                    statusCodeToErr(res)\n                    return Promise.resolve(null)\n\n                }\n            })\n            .then(data => {\n                if (!data) {\n                    console.log(`problem with network request: ${networkErrMsg}`)\n                } else {\n\n                    console.log(data)\n\n                    // call to refresh the list\n                    // set RefreshCounter(refreshCounter + 1)\n                }\n            })\n    }\n\n    return (\n        <>\n            <form onSubmit={handleSubmit}>\n                <label htmlFor=\"name\">name</label>\n                <input type=\"text\" id=\"name\" onChange={handleChange} value={album.name} /><br></br>\n                <input accept='image/*' id=\"image_url\" onChange={handleChange} name='image' type='file'/>\n                <input type=\"submit\" className=\"btn btn-danger\" value=\"goodbye\" />\n            </form>\n        </>\n    )\n}\n\nexport default NewAlbum"],"mappings":"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"},"metadata":{},"sourceType":"module"}