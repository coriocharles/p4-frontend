{"ast":null,"code":"var _jsxFileName = \"/Users/charlescorio/Desktop/sei/projects/p4/frontend/src/components/Posts.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { Card, CardContent, CardMedia, Grid, Typography, Container } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Posts = () => {\n  _s();\n\n  const dbURL = 'http://localhost:8000/api/posts';\n  const [posts, setPosts] = useState(null);\n  useEffect(() => {\n    fetch(dbURL).then(res => res.json()).then(data => setPosts(posts)).then(console.log(posts));\n  }, []);\n  console.log(posts);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !posts || posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"no posts found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      component: \"main\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 5,\n        alignItems: \"flex-end\",\n        children: posts.map(post => {\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  gutterBottom: true,\n                  variant: \"h6\",\n                  component: \"h2\",\n                  children: [post.title.substr(0, 50), \"...\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    component: \"p\",\n                    color: \"textPrimary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 43,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"p\",\n                    color: \"textSecondary\",\n                    children: [post.content.substr(0, 60), \"...\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 47,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  to: `artist/${post.artist}`,\n                  children: post.artist\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 56\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  to: `album/${post.album}`,\n                  children: post.artist\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 41\n            }, this)\n          }, post.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 37\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Posts, \"wpRH37fUtUObFvrmE0Zv7YZafpY=\");\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useParams","Link","useEffect","useState","Card","CardContent","CardMedia","Grid","Typography","Container","Posts","dbURL","posts","setPosts","fetch","then","res","json","data","console","log","length","map","post","title","substr","content","artist","album","id"],"sources":["/Users/charlescorio/Desktop/sei/projects/p4/frontend/src/components/Posts.js"],"sourcesContent":["import React from 'react'\nimport { useParams, Link } from 'react-router-dom'\nimport { useEffect, useState } from 'react'\nimport { Card, CardContent, CardMedia, Grid, Typography, Container } from '@mui/material'\n\n\nconst Posts = () => {\n    const dbURL = 'http://localhost:8000/api/posts'\n    const [posts, setPosts] = useState(null)\n\n    useEffect(() => {\n            fetch(dbURL)\n                .then(res => res.json())\n                .then(data =>\n                    setPosts(posts)\n                )\n                .then(console.log(posts))\n\n        }, [])\n    console.log(posts)\n    return(\n        <div>\n            {\n                !posts || posts.length === 0\n                    ?<p>no posts found</p>\n                    : \n                    <Container maxWidth=\"md\" component=\"main\">\n                        <Grid container spacing={5} alignItems=\"flex-end\">\n                            {posts.map((post) => {\n                                return (\n                                    <Grid item key={post.id} xs={12} md={4}>\n                                        <Card>\n                                            \n                                            <CardContent >\n                                                <Typography\n                                                    gutterBottom\n                                                    variant=\"h6\"\n                                                    component=\"h2\"\n                                                >\n                                                    {post.title.substr(0, 50)}...\n                                                </Typography>\n                                                <div >\n                                                    <Typography\n                                                        component=\"p\"\n                                                        color=\"textPrimary\"\n                                                    ></Typography>\n                                                    <Typography variant=\"p\" color=\"textSecondary\">\n                                                        {post.content.substr(0, 60)}...\n                                                    </Typography>\n                                                </div>\n                                                <Link to={`artist/${post.artist}`}>{post.artist}\n                                                </Link><br></br>\n                                                <Link to={`album/${post.album}`}>{post.artist}\n                                                </Link>\n                                            </CardContent>\n                                        </Card>\n                                    </Grid>\n                                );\n                            })}\n                        </Grid>\n                    </Container>\n\n\n            }\n        </div>\n       \n    )\n}\n\nexport default Posts"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,kBAAhC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,SAA5B,EAAuCC,IAAvC,EAA6CC,UAA7C,EAAyDC,SAAzD,QAA0E,eAA1E;;;AAGA,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAChB,MAAMC,KAAK,GAAG,iCAAd;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;EAEAD,SAAS,CAAC,MAAM;IACRY,KAAK,CAACH,KAAD,CAAL,CACKI,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IACNL,QAAQ,CAACD,KAAD,CAHhB,EAKKG,IALL,CAKUI,OAAO,CAACC,GAAR,CAAYR,KAAZ,CALV;EAOH,CARI,EAQF,EARE,CAAT;EASAO,OAAO,CAACC,GAAR,CAAYR,KAAZ;EACA,oBACI;IAAA,UAEQ,CAACA,KAAD,IAAUA,KAAK,CAACS,MAAN,KAAiB,CAA3B,gBACK;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADL,gBAGI,QAAC,SAAD;MAAW,QAAQ,EAAC,IAApB;MAAyB,SAAS,EAAC,MAAnC;MAAA,uBACI,QAAC,IAAD;QAAM,SAAS,MAAf;QAAgB,OAAO,EAAE,CAAzB;QAA4B,UAAU,EAAC,UAAvC;QAAA,UACKT,KAAK,CAACU,GAAN,CAAWC,IAAD,IAAU;UACjB,oBACI,QAAC,IAAD;YAAM,IAAI,MAAV;YAAyB,EAAE,EAAE,EAA7B;YAAiC,EAAE,EAAE,CAArC;YAAA,uBACI,QAAC,IAAD;cAAA,uBAEI,QAAC,WAAD;gBAAA,wBACI,QAAC,UAAD;kBACI,YAAY,MADhB;kBAEI,OAAO,EAAC,IAFZ;kBAGI,SAAS,EAAC,IAHd;kBAAA,WAKKA,IAAI,CAACC,KAAL,CAAWC,MAAX,CAAkB,CAAlB,EAAqB,EAArB,CALL;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QADJ,eAQI;kBAAA,wBACI,QAAC,UAAD;oBACI,SAAS,EAAC,GADd;oBAEI,KAAK,EAAC;kBAFV;oBAAA;oBAAA;oBAAA;kBAAA,QADJ,eAKI,QAAC,UAAD;oBAAY,OAAO,EAAC,GAApB;oBAAwB,KAAK,EAAC,eAA9B;oBAAA,WACKF,IAAI,CAACG,OAAL,CAAaD,MAAb,CAAoB,CAApB,EAAuB,EAAvB,CADL;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QALJ;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QARJ,eAiBI,QAAC,IAAD;kBAAM,EAAE,EAAG,UAASF,IAAI,CAACI,MAAO,EAAhC;kBAAA,UAAoCJ,IAAI,CAACI;gBAAzC;kBAAA;kBAAA;kBAAA;gBAAA,QAjBJ,eAkBW;kBAAA;kBAAA;kBAAA;gBAAA,QAlBX,eAmBI,QAAC,IAAD;kBAAM,EAAE,EAAG,SAAQJ,IAAI,CAACK,KAAM,EAA9B;kBAAA,UAAkCL,IAAI,CAACI;gBAAvC;kBAAA;kBAAA;kBAAA;gBAAA,QAnBJ;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YAFJ;cAAA;cAAA;cAAA;YAAA;UADJ,GAAgBJ,IAAI,CAACM,EAArB;YAAA;YAAA;YAAA;UAAA,QADJ;QA6BH,CA9BA;MADL;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EALZ;IAAA;IAAA;IAAA;EAAA,QADJ;AA+CH,CA7DD;;GAAMnB,K;;KAAAA,K;AA+DN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}