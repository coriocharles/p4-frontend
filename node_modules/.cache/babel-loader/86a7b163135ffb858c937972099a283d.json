{"ast":null,"code":"var _jsxFileName = \"/Users/charlescorio/Desktop/sei/projects/p4/frontend/src/components/PostCreate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction NewPost() {\n  _s();\n\n  const url = 'http://localhost:8000/api/posts/';\n  const {\n    albumid,\n    artistid\n  } = useParams();\n  const [newPost, setNewPost] = useState({\n    Title: '',\n    Artist: 'Grouper',\n    Album: 'Holding',\n    Content: '',\n    Author: 'coriocharles',\n    Status: ''\n  });\n  let token = localStorage.getItem('access_token');\n\n  const handleChange = event => {\n    setNewPost({ ...newPost,\n      [event.target.id]: event.target.value\n    });\n    console.log(newPost);\n  };\n\n  const [networkErrMsg, setNetworkErrMsg] = useState(null);\n  const [clientErrMsg, setClientErrMsg] = useState(null);\n\n  const statusCodeToErr = responseObj => {\n    setNetworkErrMsg(`Network Error of code: ${responseObj.status}`); // TODO - console log the err message\n  };\n\n  const clientFormValidation = newPost => {\n    const blankFields = Object.entries(newPost).filter(kv => kv[1] === '');\n\n    if (blankFields.length > 0) {\n      setClientErrMsg(`${blankFields[0][0]} can not be blank`);\n      return false;\n    }\n\n    setClientErrMsg(null);\n    return true;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(`fetching with token ${token}`);\n    setNetworkErrMsg(null);\n\n    if (!clientFormValidation(newPost)) {\n      return;\n    }\n\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': ` JWT ${token}`\n      },\n      body: JSON.stringify(newPost)\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        statusCodeToErr(res);\n        return Promise.resolve(null);\n      }\n    }).then(data => {\n      if (!data) {\n        console.log(`problem with network request: ${networkErrMsg}`);\n      } else {\n        console.log(data); // call to refresh the list\n        // set RefreshCounter(refreshCounter + 1)\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"write review for \", albumid, \" by \", artistid, /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"Title\",\n        onChange: handleChange,\n        value: newPost.Title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 95\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Content\",\n        children: \"Your Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 61\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"10\",\n        cols: \"50\",\n        type: \"text\",\n        id: \"Content\",\n        onChange: handleChange,\n        value: newPost.Content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 122\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Status\",\n        children: \"Review Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 62\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        type: \"text\",\n        id: \"status\",\n        onChange: handleChange,\n        value: newPost.status,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"draft\",\n          children: \"Draft\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"published\",\n          children: \"Publish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-danger\",\n        value: \"hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(NewPost, \"+ZJg6KY3RtperH/Sgd6VOGpAfQY=\", false, function () {\n  return [useParams];\n});\n\n_c = NewPost;\nexport default NewPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"names":["React","useState","useParams","NewPost","url","albumid","artistid","newPost","setNewPost","Title","Artist","Album","Content","Author","Status","token","localStorage","getItem","handleChange","event","target","id","value","console","log","networkErrMsg","setNetworkErrMsg","clientErrMsg","setClientErrMsg","statusCodeToErr","responseObj","status","clientFormValidation","blankFields","Object","entries","filter","kv","length","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","ok","json","Promise","resolve","data"],"sources":["/Users/charlescorio/Desktop/sei/projects/p4/frontend/src/components/PostCreate.js"],"sourcesContent":["import React, {useState} from 'react'\nimport { useParams } from 'react-router-dom'\n\nfunction NewPost() {\n    const url = 'http://localhost:8000/api/posts/'\n    const {albumid, artistid} = useParams()\n    const [newPost, setNewPost] = useState({\n        Title: '',\n        Artist: 'Grouper',\n        Album: 'Holding',\n        Content: '',\n        Author: 'coriocharles',\n        Status: ''\n    })\n\n\n    let token = localStorage.getItem('access_token')\n    const handleChange = (event) => {\n        setNewPost({...newPost, [event.target.id]: event.target.value })\n        console.log(newPost)\n    }\n\n    \n    \n    const [networkErrMsg, setNetworkErrMsg] = useState(null)\n\n    const [clientErrMsg, setClientErrMsg] = useState(null)\n\n    const statusCodeToErr = (responseObj) => {\n        setNetworkErrMsg(`Network Error of code: ${responseObj.status}`)\n        // TODO - console log the err message\n    }\n    const clientFormValidation = (newPost) => {\n        const blankFields = Object.entries(newPost)\n            .filter(kv => kv[1] === '')\n        if (blankFields.length > 0) {\n            setClientErrMsg(`${blankFields[0][0]} can not be blank`)\n            return false\n        }\n        setClientErrMsg(null)\n        return true\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        console.log(`fetching with token ${token}`)\n        setNetworkErrMsg(null)\n        if (!clientFormValidation(newPost)) {\n            return\n        }\n        fetch(url,\n            {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': ` JWT ${token}`\n                },\n                body: JSON.stringify(newPost)\n            }\n        )\n            .then(res => {\n                if (res.ok) {\n                    return res.json()\n                } else {\n                    statusCodeToErr(res)\n                    return Promise.resolve(null)\n                }\n            })\n            .then(data => {\n                if (!data) {\n                    console.log(`problem with network request: ${networkErrMsg}`)\n                } else {\n\n                    console.log(data)\n\n                    // call to refresh the list\n                    // set RefreshCounter(refreshCounter + 1)\n                }\n            })\n    }\n\n    return (\n        <>\n        write review for {albumid} by {artistid}\n            <form onSubmit={handleSubmit}>\n                <label htmlFor=\"title\">Title</label>\n                <input type=\"text\" id=\"Title\" onChange={handleChange} value={newPost.Title} /><br></br>\n                <label htmlFor=\"Content\">Your Review</label><br></br>\n                <textarea rows=\"10\" cols=\"50\" type=\"text\" id=\"Content\" onChange={handleChange} value={newPost.Content} /><br></br>\n                <label htmlFor=\"Status\">Review Status</label><br></br>\n                <select type=\"text\" id=\"status\" onChange={handleChange} value={newPost.status}>\n                    <option value=\"draft\">Draft</option>\n                    <option value=\"published\">Publish</option>\n                </select>\n                <input type=\"submit\" className=\"btn btn-danger\" value=\"hello\" />\n            </form>\n        </>\n    )\n}\n\nexport default NewPost"],"mappings":"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"},"metadata":{},"sourceType":"module"}