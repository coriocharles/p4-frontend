{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewArtist() {\n  _s();\n\n  const url = 'http://localhost:8000/api/artists/';\n  const [artist, setArtist] = useState({\n    name: ''\n  });\n  let token = localStorage.getItem('access_token');\n\n  const handleChange = event => {\n    setArtist({ ...artist,\n      [event.target.id]: event.target.value\n    });\n    console.log(artist);\n  };\n\n  const [networkErrMsg, setNetworkErrMsg] = useState(null);\n\n  const statusCodeToErr = responseObj => {\n    setNetworkErrMsg(`Network Error of code: ${responseObj.status}`); // TODO - console log the err message\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(`fetching with token ${token}`);\n    setNetworkErrMsg(null);\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': ` JWT ${token}`\n      },\n      body: JSON.stringify(artist)\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        statusCodeToErr(res);\n        return Promise.resolve(null);\n      }\n    }).then(data => {\n      if (!data) {\n        console.log(`problem with network request: ${networkErrMsg}`);\n      } else {\n        console.log(data); // call to refresh the list\n        // set RefreshCounter(refreshCounter + 1)\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(NewArtist, \"bsOj/0++a9/1LcOnFKuvCoQwbr0=\");\n\n_c = NewArtist;\nexport default NewArtist;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewArtist\");","map":{"version":3,"names":["React","useState","useParams","NewArtist","url","artist","setArtist","name","token","localStorage","getItem","handleChange","event","target","id","value","console","log","networkErrMsg","setNetworkErrMsg","statusCodeToErr","responseObj","status","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","ok","json","Promise","resolve","data"],"sources":["/Users/charlescorio/Desktop/sei/projects/p4/frontend/src/components/NewArtist.js"],"sourcesContent":["import React, {useState} from 'react'\nimport { useParams } from 'react-router-dom'\n\nfunction NewArtist() {\n    const url = 'http://localhost:8000/api/artists/'\n    const [artist, setArtist] = useState({\n        name: ''\n    })\n\n    let token = localStorage.getItem('access_token')\n    const handleChange = (event) => {\n        setArtist({...artist, [event.target.id]: event.target.value })\n        console.log(artist)\n    }\n\n    \n    \n    const [networkErrMsg, setNetworkErrMsg] = useState(null)\n\n    const statusCodeToErr = (responseObj) => {\n        setNetworkErrMsg(`Network Error of code: ${responseObj.status}`)\n        // TODO - console log the err message\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        console.log(`fetching with token ${token}`)\n        setNetworkErrMsg(null)\n        fetch(url,\n            {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': ` JWT ${token}`\n                },\n                body: JSON.stringify(artist)\n            }\n        )\n            .then(res => {\n                if (res.ok) {\n                    return res.json()\n                } else {\n                    statusCodeToErr(res)\n                    return Promise.resolve(null)\n                }\n            })\n            .then(data => {\n                if (!data) {\n                    console.log(`problem with network request: ${networkErrMsg}`)\n                } else {\n\n                    console.log(data)\n\n                    // call to refresh the list\n                    // set RefreshCounter(refreshCounter + 1)\n                }\n            })\n    }\n\n    return (\n        <>\n            {/* <form onSubmit={handleSubmit}>\n                <label htmlFor=\"name\">name</label>\n                <input type=\"text\" id=\"name\" onChange={handleChange} value={artist.name} /><br></br>\n                \n                <input type=\"submit\" className=\"btn btn-danger\" value=\"hello\" />\n            </form> */}\n        </>\n    )\n}\n\nexport default NewArtist"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;;AAEA,SAASC,SAAT,GAAqB;EAAA;;EACjB,MAAMC,GAAG,GAAG,oCAAZ;EACA,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC;IACjCM,IAAI,EAAE;EAD2B,CAAD,CAApC;EAIA,IAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAZ;;EACA,MAAMC,YAAY,GAAIC,KAAD,IAAW;IAC5BN,SAAS,CAAC,EAAC,GAAGD,MAAJ;MAAY,CAACO,KAAK,CAACC,MAAN,CAAaC,EAAd,GAAmBF,KAAK,CAACC,MAAN,CAAaE;IAA5C,CAAD,CAAT;IACAC,OAAO,CAACC,GAAR,CAAYZ,MAAZ;EACH,CAHD;;EAOA,MAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoClB,QAAQ,CAAC,IAAD,CAAlD;;EAEA,MAAMmB,eAAe,GAAIC,WAAD,IAAiB;IACrCF,gBAAgB,CAAE,0BAAyBE,WAAW,CAACC,MAAO,EAA9C,CAAhB,CADqC,CAErC;EACH,CAHD;;EAIA,MAAMC,YAAY,GAAIC,CAAD,IAAO;IACxBA,CAAC,CAACC,cAAF;IACAT,OAAO,CAACC,GAAR,CAAa,uBAAsBT,KAAM,EAAzC;IACAW,gBAAgB,CAAC,IAAD,CAAhB;IACAO,KAAK,CAACtB,GAAD,EACD;MACIuB,MAAM,EAAE,MADZ;MAEIC,OAAO,EAAE;QACL,gBAAgB,kBADX;QAEL,iBAAkB,QAAOpB,KAAM;MAF1B,CAFb;MAMIqB,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe1B,MAAf;IANV,CADC,CAAL,CAUK2B,IAVL,CAUUC,GAAG,IAAI;MACT,IAAIA,GAAG,CAACC,EAAR,EAAY;QACR,OAAOD,GAAG,CAACE,IAAJ,EAAP;MACH,CAFD,MAEO;QACHf,eAAe,CAACa,GAAD,CAAf;QACA,OAAOG,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAP;MACH;IACJ,CAjBL,EAkBKL,IAlBL,CAkBUM,IAAI,IAAI;MACV,IAAI,CAACA,IAAL,EAAW;QACPtB,OAAO,CAACC,GAAR,CAAa,iCAAgCC,aAAc,EAA3D;MACH,CAFD,MAEO;QAEHF,OAAO,CAACC,GAAR,CAAYqB,IAAZ,EAFG,CAIH;QACA;MACH;IACJ,CA5BL;EA6BH,CAjCD;;EAmCA,oBACI,qCADJ;AAUH;;GAjEQnC,S;;KAAAA,S;AAmET,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}