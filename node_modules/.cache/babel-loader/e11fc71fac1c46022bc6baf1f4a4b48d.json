{"ast":null,"code":"var _jsxFileName = \"/Users/charlescorio/Desktop/sei/projects/p4/frontend/src/components/Posts.js\";\nimport React from 'react';\nimport { Card, CardContent, CardMedia, Grid, Typography, Container } from '@mui/material';\nimport { makeStyles } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  cardMedia: {\n    paddingTop: '56.25%' // 16:9\n\n  },\n  link: {\n    margin: theme.spacing(1, 1.5)\n  },\n  cardHeader: {\n    backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[700]\n  },\n  postTitle: {\n    fontSize: '16px',\n    textAlign: 'left'\n  },\n  postText: {\n    display: 'flex',\n    justifyContent: 'left',\n    alignItems: 'baseline',\n    fontSize: '12px',\n    textAlign: 'left',\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nconst Posts = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !props.post || props.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"no posts found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      component: \"main\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 5,\n        alignItems: \"flex-end\",\n        children: props.post.map(post => {\n          return (\n            /*#__PURE__*/\n            // Enterprise card is full width at sm breakpoint\n            _jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                className: classes.card,\n                children: /*#__PURE__*/_jsxDEV(CardContent, {\n                  className: classes.cardContent,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    gutterBottom: true,\n                    variant: \"h6\",\n                    component: \"h2\",\n                    className: classes.postTitle,\n                    children: [post.title.substr(0, 50), \"...\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 48,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: classes.postText,\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      component: \"p\",\n                      color: \"textPrimary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 57,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"p\",\n                      color: \"textSecondary\",\n                      children: [post.excerpt.substr(0, 60), \"...\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 61,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 41\n              }, this)\n            }, post.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 37\n            }, this)\n          );\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","Card","CardContent","CardMedia","Grid","Typography","Container","makeStyles","useStyles","theme","cardMedia","paddingTop","link","margin","spacing","cardHeader","backgroundColor","palette","type","grey","postTitle","fontSize","textAlign","postText","display","justifyContent","alignItems","marginBottom","Posts","props","post","length","map","classes","card","cardContent","title","substr","excerpt","id"],"sources":["/Users/charlescorio/Desktop/sei/projects/p4/frontend/src/components/Posts.js"],"sourcesContent":["import React from 'react'\nimport { Card, CardContent, CardMedia, Grid, Typography, Container } from '@mui/material'\nimport { makeStyles } from '@mui/material'\n\nconst useStyles = makeStyles((theme) => ({\n    cardMedia: {\n        paddingTop: '56.25%', // 16:9\n    },\n    link: {\n        margin: theme.spacing(1, 1.5),\n    },\n    cardHeader: {\n        backgroundColor:\n            theme.palette.type === 'light'\n                ? theme.palette.grey[200]\n                : theme.palette.grey[700],\n    },\n    postTitle: {\n        fontSize: '16px',\n        textAlign: 'left',\n    },\n    postText: {\n        display: 'flex',\n        justifyContent: 'left',\n        alignItems: 'baseline',\n        fontSize: '12px',\n        textAlign: 'left',\n        marginBottom: theme.spacing(2),\n    },\n}));\n\nconst Posts = (props) => {\n    return(\n        <div>\n            {\n                !props.post || props.length===0\n                    ?<p>no posts found</p>\n                    : \n                    <Container maxWidth=\"md\" component=\"main\">\n                        <Grid container spacing={5} alignItems=\"flex-end\">\n                            {props.post.map((post) => {\n                                return (\n                                    // Enterprise card is full width at sm breakpoint\n                                    <Grid item key={post.id} xs={12} md={4}>\n                                        <Card className={classes.card}>\n                                            \n                                            <CardContent className={classes.cardContent}>\n                                                <Typography\n                                                    gutterBottom\n                                                    variant=\"h6\"\n                                                    component=\"h2\"\n                                                    className={classes.postTitle}\n                                                >\n                                                    {post.title.substr(0, 50)}...\n                                                </Typography>\n                                                <div className={classes.postText}>\n                                                    <Typography\n                                                        component=\"p\"\n                                                        color=\"textPrimary\"\n                                                    ></Typography>\n                                                    <Typography variant=\"p\" color=\"textSecondary\">\n                                                        {post.excerpt.substr(0, 60)}...\n                                                    </Typography>\n                                                </div>\n                                            </CardContent>\n                                        </Card>\n                                    </Grid>\n                                );\n                            })}\n                        </Grid>\n                    </Container>\n\n\n            }\n        </div>\n       \n    )\n}\n\nexport default Posts"],"mappings":"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"},"metadata":{},"sourceType":"module"}